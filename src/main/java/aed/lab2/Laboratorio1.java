
package aed.lab2;

import javax.swing.table.DefaultTableModel;
import javax.swing.*;

public class Laboratorio1 extends javax.swing.JPanel {
    
    //Variables a usar
    int tam, cuenta, ene = -1, pos;
    int arregloA[] = new int[100];
    int arregloB[] = new int[100];
    String arregloE[] = new String[100];
    String arregloE2[] = new String[100];
    String arregloS[] = new String[100], arregloC = "";
    int aux;
    boolean existe = false;
    
    String [] sujeto = new String[6];
    String [] agregar1 = new String[6];
    
    public Laboratorio1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpanelLaboratorio1 = new javax.swing.JTabbedPane();
        panelEjercicio1 = new javax.swing.JPanel();
        txtEjercicio1 = new javax.swing.JLabel();
        txtTamEj1 = new javax.swing.JLabel();
        txtbTamEj1 = new javax.swing.JTextField();
        btnTamEj1 = new javax.swing.JButton();
        cmboxEj1 = new javax.swing.JComboBox<>();
        txtArregloEj1 = new javax.swing.JLabel();
        txtbArregloEj1 = new javax.swing.JTextField();
        btnArregloEj1 = new javax.swing.JButton();
        txtArregloCeldaEj1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEj1 = new javax.swing.JTable();
        btnVerEj1 = new javax.swing.JButton();
        panelEjercicio2 = new javax.swing.JPanel();
        txtEjercicio2 = new javax.swing.JLabel();
        txtTamEj2 = new javax.swing.JLabel();
        txtbTamEj2 = new javax.swing.JTextField();
        btnTamEj2 = new javax.swing.JButton();
        cmboxEj2 = new javax.swing.JComboBox<>();
        txtArregloEj2 = new javax.swing.JLabel();
        txtbArregloEj2 = new javax.swing.JTextField();
        btnArregloEj2 = new javax.swing.JButton();
        txtArregloCeldaEj2 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tableEj2 = new javax.swing.JTable();
        btnVerEj2 = new javax.swing.JButton();
        panelEjercicio3 = new javax.swing.JPanel();
        txtEjercicio3 = new javax.swing.JLabel();
        txtTamEj3 = new javax.swing.JLabel();
        txtbTamEj3 = new javax.swing.JTextField();
        btnTamEj3 = new javax.swing.JButton();
        cmboxEj3 = new javax.swing.JComboBox<>();
        txtArregloEj3 = new javax.swing.JLabel();
        txtbArregloEj3 = new javax.swing.JTextField();
        btnArregloEj3 = new javax.swing.JButton();
        txtArregloCeldaEj3 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tableEj3 = new javax.swing.JTable();
        btnVerEj3 = new javax.swing.JButton();
        panelEjercicio4 = new javax.swing.JPanel();
        txtEjercicio4 = new javax.swing.JLabel();
        txtTamEj4 = new javax.swing.JLabel();
        txtbTamEj4 = new javax.swing.JTextField();
        btnTamEj4 = new javax.swing.JButton();
        cmboxEj4 = new javax.swing.JComboBox<>();
        txtArregloEj4 = new javax.swing.JLabel();
        txtbArregloEj4 = new javax.swing.JTextField();
        btnArregloEj4 = new javax.swing.JButton();
        txtArregloCeldaEj4 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tableEj4 = new javax.swing.JTable();
        btnVerEj4 = new javax.swing.JButton();
        panelEjercicio5 = new javax.swing.JPanel();
        txtEjercicio5 = new javax.swing.JLabel();
        txtTamEj5 = new javax.swing.JLabel();
        txtbTamEj5 = new javax.swing.JTextField();
        btnTamEj5 = new javax.swing.JButton();
        cmboxEj5 = new javax.swing.JComboBox<>();
        txtArregloEj5 = new javax.swing.JLabel();
        txtbArregloEj5 = new javax.swing.JTextField();
        btnArregloEj5 = new javax.swing.JButton();
        txtArregloCeldaEj5 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tableEj5 = new javax.swing.JTable();
        btnVerEj5 = new javax.swing.JButton();
        panelEjercicio6 = new javax.swing.JPanel();
        txtEjercicio6 = new javax.swing.JLabel();
        txtTamEj6 = new javax.swing.JLabel();
        txtbTamEj6 = new javax.swing.JTextField();
        btnTamEj6 = new javax.swing.JButton();
        cmboxEj6 = new javax.swing.JComboBox<>();
        txtArregloEj6 = new javax.swing.JLabel();
        txtbArregloEj6 = new javax.swing.JTextField();
        btnArregloEj6 = new javax.swing.JButton();
        txtArregloCeldaEj6 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tableEj6 = new javax.swing.JTable();
        btnVerEj6 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tpanelLaboratorio1.setBackground(new java.awt.Color(255, 255, 255));

        panelEjercicio1.setBackground(new java.awt.Color(255, 255, 255));
        panelEjercicio1.setToolTipText("");
        panelEjercicio1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEjercicio1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtEjercicio1.setText("Ejercicio 1");
        panelEjercicio1.add(txtEjercicio1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        txtTamEj1.setBackground(new java.awt.Color(0, 0, 0));
        txtTamEj1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTamEj1.setText("Ingrese el tama√±o del arreglo:");
        panelEjercicio1.add(txtTamEj1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        txtbTamEj1.setBackground(new java.awt.Color(102, 102, 102));
        txtbTamEj1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtbTamEj1.setForeground(new java.awt.Color(255, 255, 255));
        txtbTamEj1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelEjercicio1.add(txtbTamEj1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 190, -1));

        btnTamEj1.setBackground(new java.awt.Color(153, 102, 255));
        btnTamEj1.setForeground(new java.awt.Color(255, 255, 255));
        btnTamEj1.setText("Aceptar");
        btnTamEj1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnTamEj1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTamEj1MouseClicked(evt);
            }
        });
        panelEjercicio1.add(btnTamEj1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 80, 30));

        cmboxEj1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dar de alta", "Dar de baja", "Mod. semestres y promedio", "Ver un registro" }));
        cmboxEj1.setEnabled(false);
        cmboxEj1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmboxEj1ItemStateChanged(evt);
            }
        });
        panelEjercicio1.add(cmboxEj1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 190, -1));

        txtArregloEj1.setBackground(new java.awt.Color(0, 0, 0));
        txtArregloEj1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtArregloEj1.setText("Ingrese el nuevo alumno:");
        panelEjercicio1.add(txtArregloEj1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txtbArregloEj1.setBackground(new java.awt.Color(102, 102, 102));
        txtbArregloEj1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtbArregloEj1.setForeground(new java.awt.Color(255, 255, 255));
        txtbArregloEj1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtbArregloEj1.setEnabled(false);
        panelEjercicio1.add(txtbArregloEj1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 190, -1));

        btnArregloEj1.setBackground(new java.awt.Color(153, 102, 255));
        btnArregloEj1.setForeground(new java.awt.Color(255, 255, 255));
        btnArregloEj1.setText("Aceptar");
        btnArregloEj1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnArregloEj1.setEnabled(false);
        btnArregloEj1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnArregloEj1MouseClicked(evt);
            }
        });
        panelEjercicio1.add(btnArregloEj1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 80, 30));

        txtArregloCeldaEj1.setBackground(new java.awt.Color(0, 0, 0));
        txtArregloCeldaEj1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        panelEjercicio1.add(txtArregloCeldaEj1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        tableEj1.setBackground(new java.awt.Color(102, 102, 102));
        tableEj1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        tableEj1.setForeground(new java.awt.Color(255, 255, 255));
        tableEj1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Alumno", "Semestres Cur", "Promedio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableEj1);

        panelEjercicio1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 290, 330));

        btnVerEj1.setBackground(new java.awt.Color(153, 102, 255));
        btnVerEj1.setForeground(new java.awt.Color(255, 255, 255));
        btnVerEj1.setText("Ver Todos los Elementos");
        btnVerEj1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnVerEj1.setEnabled(false);
        btnVerEj1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVerEj1MouseClicked(evt);
            }
        });
        panelEjercicio1.add(btnVerEj1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 190, 50));

        tpanelLaboratorio1.addTab("Ejercicio 1", panelEjercicio1);

        panelEjercicio2.setBackground(new java.awt.Color(255, 255, 255));
        panelEjercicio2.setToolTipText("");
        panelEjercicio2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEjercicio2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtEjercicio2.setText("Ejercicio 2");
        panelEjercicio2.add(txtEjercicio2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        txtTamEj2.setBackground(new java.awt.Color(0, 0, 0));
        txtTamEj2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTamEj2.setText("Ingrese el tama√±o del arreglo:");
        panelEjercicio2.add(txtTamEj2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        txtbTamEj2.setBackground(new java.awt.Color(102, 102, 102));
        txtbTamEj2.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtbTamEj2.setForeground(new java.awt.Color(255, 255, 255));
        txtbTamEj2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelEjercicio2.add(txtbTamEj2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 190, -1));

        btnTamEj2.setBackground(new java.awt.Color(153, 102, 255));
        btnTamEj2.setForeground(new java.awt.Color(255, 255, 255));
        btnTamEj2.setText("Aceptar");
        btnTamEj2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnTamEj2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTamEj2MouseClicked(evt);
            }
        });
        panelEjercicio2.add(btnTamEj2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 80, 30));

        cmboxEj2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dar de alta", "Dar de baja", "Mod. estado moroso", "Ver un registro" }));
        cmboxEj2.setEnabled(false);
        cmboxEj2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmboxEj2ItemStateChanged(evt);
            }
        });
        panelEjercicio2.add(cmboxEj2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 190, -1));

        txtArregloEj2.setBackground(new java.awt.Color(0, 0, 0));
        txtArregloEj2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtArregloEj2.setText("Ingrese el nuevo cliente:");
        panelEjercicio2.add(txtArregloEj2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txtbArregloEj2.setBackground(new java.awt.Color(102, 102, 102));
        txtbArregloEj2.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtbArregloEj2.setForeground(new java.awt.Color(255, 255, 255));
        txtbArregloEj2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtbArregloEj2.setEnabled(false);
        panelEjercicio2.add(txtbArregloEj2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 190, -1));

        btnArregloEj2.setBackground(new java.awt.Color(153, 102, 255));
        btnArregloEj2.setForeground(new java.awt.Color(255, 255, 255));
        btnArregloEj2.setText("Aceptar");
        btnArregloEj2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnArregloEj2.setEnabled(false);
        btnArregloEj2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnArregloEj2MouseClicked(evt);
            }
        });
        panelEjercicio2.add(btnArregloEj2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 80, 30));

        txtArregloCeldaEj2.setBackground(new java.awt.Color(0, 0, 0));
        txtArregloCeldaEj2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        panelEjercicio2.add(txtArregloCeldaEj2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        tableEj2.setBackground(new java.awt.Color(102, 102, 102));
        tableEj2.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        tableEj2.setForeground(new java.awt.Color(255, 255, 255));
        tableEj2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cliente", "Telefono", "Saldo", "Est. Moroso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(tableEj2);

        panelEjercicio2.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 290, 330));

        btnVerEj2.setBackground(new java.awt.Color(153, 102, 255));
        btnVerEj2.setForeground(new java.awt.Color(255, 255, 255));
        btnVerEj2.setText("Ver Todos los Elementos");
        btnVerEj2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnVerEj2.setEnabled(false);
        btnVerEj2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVerEj2MouseClicked(evt);
            }
        });
        panelEjercicio2.add(btnVerEj2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 190, 50));

        tpanelLaboratorio1.addTab("Ejercicio 2", panelEjercicio2);

        panelEjercicio3.setBackground(new java.awt.Color(255, 255, 255));
        panelEjercicio3.setToolTipText("");
        panelEjercicio3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEjercicio3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtEjercicio3.setText("Ejercicio 3");
        panelEjercicio3.add(txtEjercicio3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        txtTamEj3.setBackground(new java.awt.Color(0, 0, 0));
        txtTamEj3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTamEj3.setText("Ingrese el tama√±o del arreglo:");
        panelEjercicio3.add(txtTamEj3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        txtbTamEj3.setBackground(new java.awt.Color(102, 102, 102));
        txtbTamEj3.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtbTamEj3.setForeground(new java.awt.Color(255, 255, 255));
        txtbTamEj3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelEjercicio3.add(txtbTamEj3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 190, -1));

        btnTamEj3.setBackground(new java.awt.Color(153, 102, 255));
        btnTamEj3.setForeground(new java.awt.Color(255, 255, 255));
        btnTamEj3.setText("Aceptar");
        btnTamEj3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnTamEj3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTamEj3MouseClicked(evt);
            }
        });
        panelEjercicio3.add(btnTamEj3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 80, 30));

        cmboxEj3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dar de alta", "Dar de baja", "Mod. edad", "Ver un registro" }));
        cmboxEj3.setEnabled(false);
        cmboxEj3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmboxEj3ItemStateChanged(evt);
            }
        });
        panelEjercicio3.add(cmboxEj3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 190, -1));

        txtArregloEj3.setBackground(new java.awt.Color(0, 0, 0));
        txtArregloEj3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtArregloEj3.setText("Ingrese el nuevo empleado:");
        panelEjercicio3.add(txtArregloEj3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txtbArregloEj3.setBackground(new java.awt.Color(102, 102, 102));
        txtbArregloEj3.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtbArregloEj3.setForeground(new java.awt.Color(255, 255, 255));
        txtbArregloEj3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtbArregloEj3.setEnabled(false);
        panelEjercicio3.add(txtbArregloEj3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 190, -1));

        btnArregloEj3.setBackground(new java.awt.Color(153, 102, 255));
        btnArregloEj3.setForeground(new java.awt.Color(255, 255, 255));
        btnArregloEj3.setText("Aceptar");
        btnArregloEj3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnArregloEj3.setEnabled(false);
        btnArregloEj3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnArregloEj3MouseClicked(evt);
            }
        });
        panelEjercicio3.add(btnArregloEj3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 80, 30));

        txtArregloCeldaEj3.setBackground(new java.awt.Color(0, 0, 0));
        txtArregloCeldaEj3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        panelEjercicio3.add(txtArregloCeldaEj3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        tableEj3.setBackground(new java.awt.Color(102, 102, 102));
        tableEj3.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        tableEj3.setForeground(new java.awt.Color(255, 255, 255));
        tableEj3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre Emp", "Sexo", "Edad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tableEj3);

        panelEjercicio3.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 290, 330));

        btnVerEj3.setBackground(new java.awt.Color(153, 102, 255));
        btnVerEj3.setForeground(new java.awt.Color(255, 255, 255));
        btnVerEj3.setText("Ver Todos los Elementos");
        btnVerEj3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnVerEj3.setEnabled(false);
        btnVerEj3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVerEj3MouseClicked(evt);
            }
        });
        panelEjercicio3.add(btnVerEj3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 190, 50));

        tpanelLaboratorio1.addTab("Ejercicio 3", panelEjercicio3);

        panelEjercicio4.setBackground(new java.awt.Color(255, 255, 255));
        panelEjercicio4.setToolTipText("");
        panelEjercicio4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEjercicio4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtEjercicio4.setText("Ejercicio 4");
        panelEjercicio4.add(txtEjercicio4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        txtTamEj4.setBackground(new java.awt.Color(0, 0, 0));
        txtTamEj4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTamEj4.setText("Ingrese el tama√±o del arreglo:");
        panelEjercicio4.add(txtTamEj4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        txtbTamEj4.setBackground(new java.awt.Color(102, 102, 102));
        txtbTamEj4.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtbTamEj4.setForeground(new java.awt.Color(255, 255, 255));
        txtbTamEj4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelEjercicio4.add(txtbTamEj4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 190, -1));

        btnTamEj4.setBackground(new java.awt.Color(153, 102, 255));
        btnTamEj4.setForeground(new java.awt.Color(255, 255, 255));
        btnTamEj4.setText("Aceptar");
        btnTamEj4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnTamEj4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTamEj4MouseClicked(evt);
            }
        });
        panelEjercicio4.add(btnTamEj4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 80, 30));

        cmboxEj4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dar de alta", "Dar de baja", "Mod. antig√ºedad", "Ver un registro" }));
        cmboxEj4.setEnabled(false);
        cmboxEj4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmboxEj4ItemStateChanged(evt);
            }
        });
        panelEjercicio4.add(cmboxEj4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 190, -1));

        txtArregloEj4.setBackground(new java.awt.Color(0, 0, 0));
        txtArregloEj4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtArregloEj4.setText("Ingrese el nuevo empleado:");
        panelEjercicio4.add(txtArregloEj4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txtbArregloEj4.setBackground(new java.awt.Color(102, 102, 102));
        txtbArregloEj4.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtbArregloEj4.setForeground(new java.awt.Color(255, 255, 255));
        txtbArregloEj4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtbArregloEj4.setEnabled(false);
        panelEjercicio4.add(txtbArregloEj4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 190, -1));

        btnArregloEj4.setBackground(new java.awt.Color(153, 102, 255));
        btnArregloEj4.setForeground(new java.awt.Color(255, 255, 255));
        btnArregloEj4.setText("Aceptar");
        btnArregloEj4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnArregloEj4.setEnabled(false);
        btnArregloEj4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnArregloEj4MouseClicked(evt);
            }
        });
        panelEjercicio4.add(btnArregloEj4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 80, 30));

        txtArregloCeldaEj4.setBackground(new java.awt.Color(0, 0, 0));
        txtArregloCeldaEj4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        panelEjercicio4.add(txtArregloCeldaEj4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        tableEj4.setBackground(new java.awt.Color(102, 102, 102));
        tableEj4.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        tableEj4.setForeground(new java.awt.Color(255, 255, 255));
        tableEj4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre Emp", "Direccion", "Edad", "Sexo", "A√±os anti"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(tableEj4);

        panelEjercicio4.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 290, 330));

        btnVerEj4.setBackground(new java.awt.Color(153, 102, 255));
        btnVerEj4.setForeground(new java.awt.Color(255, 255, 255));
        btnVerEj4.setText("Ver Todos los Elementos");
        btnVerEj4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnVerEj4.setEnabled(false);
        btnVerEj4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVerEj4MouseClicked(evt);
            }
        });
        panelEjercicio4.add(btnVerEj4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 190, 50));

        tpanelLaboratorio1.addTab("Ejercicio 4", panelEjercicio4);

        panelEjercicio5.setBackground(new java.awt.Color(255, 255, 255));
        panelEjercicio5.setToolTipText("");
        panelEjercicio5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEjercicio5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtEjercicio5.setText("Ejercicio 5");
        panelEjercicio5.add(txtEjercicio5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        txtTamEj5.setBackground(new java.awt.Color(0, 0, 0));
        txtTamEj5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTamEj5.setText("Ingrese el tama√±o del arreglo:");
        panelEjercicio5.add(txtTamEj5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        txtbTamEj5.setBackground(new java.awt.Color(102, 102, 102));
        txtbTamEj5.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtbTamEj5.setForeground(new java.awt.Color(255, 255, 255));
        txtbTamEj5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelEjercicio5.add(txtbTamEj5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 190, -1));

        btnTamEj5.setBackground(new java.awt.Color(153, 102, 255));
        btnTamEj5.setForeground(new java.awt.Color(255, 255, 255));
        btnTamEj5.setText("Aceptar");
        btnTamEj5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnTamEj5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTamEj5MouseClicked(evt);
            }
        });
        panelEjercicio5.add(btnTamEj5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 80, 30));

        cmboxEj5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dar de alta", "Dar de baja", "Mod. precio", "Ver un registro" }));
        cmboxEj5.setEnabled(false);
        cmboxEj5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmboxEj5ItemStateChanged(evt);
            }
        });
        panelEjercicio5.add(cmboxEj5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 190, -1));

        txtArregloEj5.setBackground(new java.awt.Color(0, 0, 0));
        txtArregloEj5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtArregloEj5.setText("Ingrese la ubicaci√≥n del nuevo dpto.:");
        panelEjercicio5.add(txtArregloEj5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txtbArregloEj5.setBackground(new java.awt.Color(102, 102, 102));
        txtbArregloEj5.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtbArregloEj5.setForeground(new java.awt.Color(255, 255, 255));
        txtbArregloEj5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtbArregloEj5.setEnabled(false);
        panelEjercicio5.add(txtbArregloEj5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 190, -1));

        btnArregloEj5.setBackground(new java.awt.Color(153, 102, 255));
        btnArregloEj5.setForeground(new java.awt.Color(255, 255, 255));
        btnArregloEj5.setText("Aceptar");
        btnArregloEj5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnArregloEj5.setEnabled(false);
        btnArregloEj5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnArregloEj5MouseClicked(evt);
            }
        });
        panelEjercicio5.add(btnArregloEj5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 80, 30));

        txtArregloCeldaEj5.setBackground(new java.awt.Color(0, 0, 0));
        txtArregloCeldaEj5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        panelEjercicio5.add(txtArregloCeldaEj5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        tableEj5.setBackground(new java.awt.Color(102, 102, 102));
        tableEj5.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        tableEj5.setForeground(new java.awt.Color(255, 255, 255));
        tableEj5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ubicacion Depa", "Extension Depa", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(tableEj5);

        panelEjercicio5.add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 290, 330));

        btnVerEj5.setBackground(new java.awt.Color(153, 102, 255));
        btnVerEj5.setForeground(new java.awt.Color(255, 255, 255));
        btnVerEj5.setText("Ver Todos los Elementos");
        btnVerEj5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnVerEj5.setEnabled(false);
        btnVerEj5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVerEj5MouseClicked(evt);
            }
        });
        panelEjercicio5.add(btnVerEj5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 190, 50));

        tpanelLaboratorio1.addTab("Ejercicio 5", panelEjercicio5);

        panelEjercicio6.setBackground(new java.awt.Color(255, 255, 255));
        panelEjercicio6.setToolTipText("");
        panelEjercicio6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEjercicio6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtEjercicio6.setText("Ejercicio 6");
        panelEjercicio6.add(txtEjercicio6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        txtTamEj6.setBackground(new java.awt.Color(0, 0, 0));
        txtTamEj6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTamEj6.setText("Ingrese el tama√±o del arreglo:");
        panelEjercicio6.add(txtTamEj6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        txtbTamEj6.setBackground(new java.awt.Color(102, 102, 102));
        txtbTamEj6.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtbTamEj6.setForeground(new java.awt.Color(255, 255, 255));
        txtbTamEj6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelEjercicio6.add(txtbTamEj6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 190, -1));

        btnTamEj6.setBackground(new java.awt.Color(153, 102, 255));
        btnTamEj6.setForeground(new java.awt.Color(255, 255, 255));
        btnTamEj6.setText("Aceptar");
        btnTamEj6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnTamEj6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTamEj6MouseClicked(evt);
            }
        });
        panelEjercicio6.add(btnTamEj6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 80, 30));

        cmboxEj6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dar de alta", "Mod. total de ventas", "Ver un registro" }));
        cmboxEj6.setEnabled(false);
        cmboxEj6.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmboxEj6ItemStateChanged(evt);
            }
        });
        panelEjercicio6.add(cmboxEj6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 190, -1));

        txtArregloEj6.setBackground(new java.awt.Color(0, 0, 0));
        txtArregloEj6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtArregloEj6.setText("Ingrese el nuevo vendedor:");
        panelEjercicio6.add(txtArregloEj6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txtbArregloEj6.setBackground(new java.awt.Color(102, 102, 102));
        txtbArregloEj6.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtbArregloEj6.setForeground(new java.awt.Color(255, 255, 255));
        txtbArregloEj6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtbArregloEj6.setEnabled(false);
        panelEjercicio6.add(txtbArregloEj6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 190, -1));

        btnArregloEj6.setBackground(new java.awt.Color(153, 102, 255));
        btnArregloEj6.setForeground(new java.awt.Color(255, 255, 255));
        btnArregloEj6.setText("Aceptar");
        btnArregloEj6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnArregloEj6.setEnabled(false);
        btnArregloEj6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnArregloEj6MouseClicked(evt);
            }
        });
        panelEjercicio6.add(btnArregloEj6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 80, 30));

        txtArregloCeldaEj6.setBackground(new java.awt.Color(0, 0, 0));
        txtArregloCeldaEj6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        panelEjercicio6.add(txtArregloCeldaEj6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        tableEj6.setBackground(new java.awt.Color(102, 102, 102));
        tableEj6.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        tableEj6.setForeground(new java.awt.Color(255, 255, 255));
        tableEj6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre Vendedor", "Total Ventas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(tableEj6);

        panelEjercicio6.add(jScrollPane12, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 290, 330));

        btnVerEj6.setBackground(new java.awt.Color(153, 102, 255));
        btnVerEj6.setForeground(new java.awt.Color(255, 255, 255));
        btnVerEj6.setText("Ver Todos los Elementos");
        btnVerEj6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnVerEj6.setEnabled(false);
        btnVerEj6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVerEj6MouseClicked(evt);
            }
        });
        panelEjercicio6.add(btnVerEj6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 190, 50));

        tpanelLaboratorio1.addTab("Ejercicio 6", panelEjercicio6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpanelLaboratorio1, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpanelLaboratorio1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    //Ctrl + Minus (-) para abrir los folders, Ctrl + Plus (+) para cerrarlos
    
    // <editor-fold defaultstate="collapsed" desc="Ejercicio 1">
    //Ejercicio 1
    private void btnTamEj1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTamEj1MouseClicked
        String a = txtbTamEj1.getText();
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo de texto del tama√±o no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        tam = Integer.parseInt(a);
        cmboxEj1.setEnabled(true);
        txtbArregloEj1.setEnabled(true);
        btnArregloEj1.setEnabled(true);
        cuenta = 0; //Resetea el contador para que se pueda agregar de nuevo el arreglo
        aux = 0; //Cuenta cu√°ntas veces se puede usar el bot√≥n en dependencia del combobox
    }//GEN-LAST:event_btnTamEj1MouseClicked

    private void cmboxEj1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmboxEj1ItemStateChanged
        switch(cmboxEj1.getSelectedIndex()){
            case 0:
                txtArregloEj1.setText("Ingrese el nuevo alumno:");
                break;
            case 1:
                txtArregloEj1.setText("Ingrese el alumno a dar de baja:");
                break;
            case 2:
                txtArregloEj1.setText("Ingrese el alumno a modificar:");
                break;
            case 3:
                txtArregloEj1.setText("Ingrese el alumno a ver:");
                break;
            default:
                break;
        }
    }//GEN-LAST:event_cmboxEj1ItemStateChanged

    private void btnArregloEj1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnArregloEj1MouseClicked
        String a = txtbArregloEj1.getText();
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo de texto no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        var cmboxActual = cmboxEj1;
        var txtbActual = txtbArregloEj1;
        var btnActual = btnVerEj1;
        var txtActual = txtArregloEj1;
        var tableActual = tableEj1;
        int ej = 1;
        
        btn(cmboxActual, txtbActual, btnActual, txtActual, tableActual, ej);
    }//GEN-LAST:event_btnArregloEj1MouseClicked
    
    private void btnVerEj1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerEj1MouseClicked
        //Crea una tabla modificada para agregar en tiempo real el arreglo en funci√≥n del tama√±o de este
        DefaultTableModel model = (DefaultTableModel) tableEj1.getModel();
        model.setColumnCount(3);
        model.setRowCount(cuenta);

        //Muestra arreglo ordenado
        for(int i = 0; i < tam; i++){
            tableEj1.setValueAt(arregloS[i], i, 0);
            tableEj1.setValueAt(arregloA[i], i, 1);
            tableEj1.setValueAt(arregloB[i], i, 2);
        }
    }//GEN-LAST:event_btnVerEj1MouseClicked
    //</editor-fold>
        
    // <editor-fold defaultstate="collapsed" desc="Ejercicio 2">
    //Ejercicio 2
    private void btnTamEj2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTamEj2MouseClicked
        String a = txtbTamEj2.getText();
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo de texto del tama√±o no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        tam = Integer.parseInt(a);
        cmboxEj2.setEnabled(true);
        txtbArregloEj2.setEnabled(true);
        btnArregloEj2.setEnabled(true);
        cuenta = 0; //Resetea el contador para que se pueda agregar de nuevo el arreglo
        aux = 0; //Cuenta cu√°ntas veces se puede usar el bot√≥n en dependencia del combobox
    }//GEN-LAST:event_btnTamEj2MouseClicked

    private void cmboxEj2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmboxEj2ItemStateChanged
        switch(cmboxEj2.getSelectedIndex()){
            case 0:
            txtArregloEj2.setText("Ingrese el nuevo cliente:");
            break;
            case 1:
            txtArregloEj2.setText("Ingrese el cliente a dar de baja:");
            break;
            case 2:
            txtArregloEj2.setText("Ingrese el cliente a modificar:");
            break;
            case 3:
            txtArregloEj2.setText("Ingrese el cliente a ver:");
            break;
            default:
            break;
        }
    }//GEN-LAST:event_cmboxEj2ItemStateChanged

    private void btnArregloEj2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnArregloEj2MouseClicked
        String a = txtbArregloEj2.getText();
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo de texto no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        var cmboxActual = cmboxEj2;
        var txtbActual = txtbArregloEj2;
        var btnActual = btnVerEj2;
        var txtActual = txtArregloEj2;
        var tableActual = tableEj2;
        int ej = 2;
        
        btn(cmboxActual, txtbActual, btnActual, txtActual, tableActual, ej);
    }//GEN-LAST:event_btnArregloEj2MouseClicked

    private void btnVerEj2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerEj2MouseClicked
        //Crea una tabla modificada para agregar en tiempo real el arreglo en funci√≥n del tama√±o de este
        DefaultTableModel model = (DefaultTableModel) tableEj2.getModel();
        model.setColumnCount(4);
        model.setRowCount(cuenta);

        //Muestra arreglo ordenado
        for(int i = 0; i < tam; i++){
            tableEj2.setValueAt(arregloS[i], i, 0);
            tableEj2.setValueAt(arregloA[i], i, 1);
            tableEj2.setValueAt(arregloB[i], i, 2);
            tableEj2.setValueAt(arregloE[i], i, 3);
        }
    }//GEN-LAST:event_btnVerEj2MouseClicked
    //</editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Ejercicio 3">
    //Ejercicio 3
    private void btnTamEj3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTamEj3MouseClicked
        String a = txtbTamEj3.getText();
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo de texto del tama√±o no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        tam = Integer.parseInt(a);
        cmboxEj3.setEnabled(true);
        txtbArregloEj3.setEnabled(true);
        btnArregloEj3.setEnabled(true);
        cuenta = 0; //Resetea el contador para que se pueda agregar de nuevo el arreglo
        aux = 0; //Cuenta cu√°ntas veces se puede usar el bot√≥n en dependencia del combobox
    }//GEN-LAST:event_btnTamEj3MouseClicked

    private void cmboxEj3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmboxEj3ItemStateChanged
        switch(cmboxEj3.getSelectedIndex()){
            case 0:
            txtArregloEj3.setText("Ingrese el nuevo empleado:");
            break;
            case 1:
            txtArregloEj3.setText("Ingrese el empleado a dar de baja:");
            break;
            case 2:
            txtArregloEj3.setText("Ingrese el empleado a modificar:");
            break;
            case 3:
            txtArregloEj3.setText("Ingrese el empleado a ver:");
            break;
            default:
            break;
        }
    }//GEN-LAST:event_cmboxEj3ItemStateChanged

    private void btnArregloEj3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnArregloEj3MouseClicked
        String a = txtbArregloEj3.getText();
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo de texto no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        var cmboxActual = cmboxEj3;
        var txtbActual = txtbArregloEj3;
        var btnActual = btnVerEj3;
        var txtActual = txtArregloEj3;
        var tableActual = tableEj3;
        int ej = 3;
        
        //arregloS = cliente, arregloA = tel√©fono, arregloB = saldo, arregloE = moroso
        btn(cmboxActual, txtbActual, btnActual, txtActual, tableActual, ej);
    }//GEN-LAST:event_btnArregloEj3MouseClicked

    private void btnVerEj3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerEj3MouseClicked
        //Crea una tabla modificada para agregar en tiempo real el arreglo en funci√≥n del tama√±o de este
        DefaultTableModel model = (DefaultTableModel) tableEj3.getModel();
        model.setColumnCount(3);
        model.setRowCount(cuenta);

        //Muestra arreglo ordenado
        for(int i = 0; i < tam; i++){
            tableEj3.setValueAt(arregloS[i], i, 0);
            tableEj3.setValueAt(arregloE[i], i, 1);
            tableEj3.setValueAt(arregloA[i], i, 2);
        }
    }//GEN-LAST:event_btnVerEj3MouseClicked
    //</editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Ejercicio 4">    
    //Ejercicio 4
    private void btnTamEj4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTamEj4MouseClicked
        String a = txtbTamEj4.getText();
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo de texto del tama√±o no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        tam = Integer.parseInt(a);
        cmboxEj4.setEnabled(true);
        txtbArregloEj4.setEnabled(true);
        btnArregloEj4.setEnabled(true);
        ene = -1; //Resetea el contador de registros agregados
        cuenta = 0; //Resetea el contador para que se pueda agregar de nuevo el arreglo
        aux = 0; //Cuenta cu√°ntas veces se puede usar el bot√≥n en dependencia del combobox
    }//GEN-LAST:event_btnTamEj4MouseClicked

    private void cmboxEj4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmboxEj4ItemStateChanged
        switch(cmboxEj4.getSelectedIndex()){
            case 0:
            txtArregloEj4.setText("Ingrese el nuevo empleado:");
            break;
            case 1:
            txtArregloEj4.setText("Ingrese el empleado a dar de baja:");
            break;
            case 2:
            txtArregloEj4.setText("Ingrese el empleado a modificar:");
            break;
            case 3:
            txtArregloEj4.setText("Ingrese el empleado a ver:");
            break;
            default:
            break;
        }
    }//GEN-LAST:event_cmboxEj4ItemStateChanged

    private void btnArregloEj4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnArregloEj4MouseClicked
        String a = txtbArregloEj4.getText();
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo de texto no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        var cmboxActual = cmboxEj4;
        var txtbActual = txtbArregloEj4;
        var btnActual = btnVerEj4;
        var txtActual = txtArregloEj4;
        var tableActual = tableEj4;
        int ej = 4;
        
        //arregloS = cliente, arregloA = tel√©fono, arregloB = saldo, arregloE = moroso
        btn(cmboxActual, txtbActual, btnActual, txtActual, tableActual, ej);
    }//GEN-LAST:event_btnArregloEj4MouseClicked

    private void btnVerEj4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerEj4MouseClicked
        //Crea una tabla modificada para agregar en tiempo real el arreglo en funci√≥n del tama√±o de este
        DefaultTableModel model = (DefaultTableModel) tableEj4.getModel();
        model.setColumnCount(5);
        model.setRowCount(cuenta);

        //Muestra arreglo ordenado
        for(int i = 0; i < tam; i++){
            tableEj4.setValueAt(arregloS[i], i, 0);
            tableEj4.setValueAt(arregloE[i], i, 1);
            tableEj4.setValueAt(arregloA[i], i, 2);
            tableEj4.setValueAt(arregloE2[i], i, 3);
            tableEj4.setValueAt(arregloB[i], i, 4);
        }
    }//GEN-LAST:event_btnVerEj4MouseClicked
    //</editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Ejercicio 5">
    //Ejercicio 5
    private void btnTamEj5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTamEj5MouseClicked
        String a = txtbTamEj5.getText();
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo de texto del tama√±o no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        tam = Integer.parseInt(a);
        cmboxEj5.setEnabled(true);
        txtbArregloEj5.setEnabled(true);
        btnArregloEj5.setEnabled(true);
        ene = -1; //Resetea el contador de registros agregados
        cuenta = 0; //Resetea el contador para que se pueda agregar de nuevo el arreglo
        aux = 0; //Cuenta cu√°ntas veces se puede usar el bot√≥n en dependencia del combobox
    }//GEN-LAST:event_btnTamEj5MouseClicked

    private void cmboxEj5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmboxEj5ItemStateChanged
        switch(cmboxEj5.getSelectedIndex()){
            case 0:
            txtArregloEj5.setText("Ingrese la ubicaci√≥n del nuevo dpto.:");
            break;
            case 1:
            txtArregloEj5.setText("Ingrese la ubicaci√≥n del dpto. a dar de baja:");
            break;
            case 2:
            txtArregloEj5.setText("Ingrese la ubicaci√≥n del dpto. a modificar:");
            break;
            case 3:
            txtArregloEj5.setText("Ingrese la ubicaci√≥n del dpto. a ver:");
            break;
            default:
            break;
        }
    }//GEN-LAST:event_cmboxEj5ItemStateChanged

    private void btnArregloEj5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnArregloEj5MouseClicked
        String a = txtbArregloEj5.getText();
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo de texto no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        var cmboxActual = cmboxEj5;
        var txtbActual = txtbArregloEj5;
        var btnActual = btnVerEj5;
        var txtActual = txtArregloEj5;
        var tableActual = tableEj5;
        int ej = 5;
        
        btn(cmboxActual, txtbActual, btnActual, txtActual, tableActual, ej);
    }//GEN-LAST:event_btnArregloEj5MouseClicked

    private void btnVerEj5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerEj5MouseClicked
        //Crea una tabla modificada para agregar en tiempo real el arreglo en funci√≥n del tama√±o de este
        DefaultTableModel model = (DefaultTableModel) tableEj5.getModel();
        model.setColumnCount(3);
        model.setRowCount(cuenta);

        //Muestra arreglo ordenado
        for(int i = 0; i < tam; i++){
            tableEj5.setValueAt(arregloS[i], i, 0);
            tableEj5.setValueAt(arregloA[i], i, 1);
            tableEj5.setValueAt(arregloB[i], i, 2);
        }
    }//GEN-LAST:event_btnVerEj5MouseClicked
//</editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Ejercicio 6">
    //Ejercicio 6
    private void btnTamEj6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTamEj6MouseClicked
        String a = txtbTamEj6.getText();
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo de texto del tama√±o no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        tam = Integer.parseInt(a);
        cmboxEj6.setEnabled(true);
        txtbArregloEj6.setEnabled(true);
        btnArregloEj6.setEnabled(true);
        ene = -1; //Resetea el contador de registros agregados
        cuenta = 0; //Resetea el contador para que se pueda agregar de nuevo el arreglo
        aux = 0; //Cuenta cu√°ntas veces se puede usar el bot√≥n en dependencia del combobox
    }//GEN-LAST:event_btnTamEj6MouseClicked

    private void cmboxEj6ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmboxEj6ItemStateChanged
        switch(cmboxEj6.getSelectedIndex()){
            case 0:
            txtArregloEj6.setText("Ingrese el nuevo vendedor:");
            break;
            case 1:
            txtArregloEj6.setText("Ingrese el vendedor a modificar:");
            break;
            case 2:
            txtArregloEj6.setText("Ingrese el vendedor a ver:");
            break;
            default:
            break;
        }
    }//GEN-LAST:event_cmboxEj6ItemStateChanged

    private void btnArregloEj6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnArregloEj6MouseClicked
        String a = txtbArregloEj6.getText();
        if(a.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "El campo de texto no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        var cmboxActual = cmboxEj6;
        var txtbActual = txtbArregloEj6;
        var btnActual = btnVerEj6;
        var txtActual = txtArregloEj6;
        var tableActual = tableEj6;
        int ej = 6;
        
        //arregloS = cliente, arregloA = tel√©fono, arregloB = saldo, arregloE = moroso
        btn(cmboxActual, txtbActual, btnActual, txtActual, tableActual, ej);
    }//GEN-LAST:event_btnArregloEj6MouseClicked

    private void btnVerEj6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerEj6MouseClicked
        //Crea una tabla modificada para agregar en tiempo real el arreglo en funci√≥n del tama√±o de este
        DefaultTableModel model = (DefaultTableModel) tableEj6.getModel();
        model.setColumnCount(2);
        model.setRowCount(cuenta);

        //Muestra arreglo ordenado
        for(int i = 0; i < tam; i++){
            tableEj6.setValueAt(arregloS[i], i, 0);
            tableEj6.setValueAt(arregloA[i], i, 1);
        }
    }//GEN-LAST:event_btnVerEj6MouseClicked
    //</editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="M√©todo principal">
    //M√©todo que contiene todas las acciones de botones
    void btn(JComboBox cmboxActual, JTextField txtbActual, JButton btnActual, JLabel txtActual, JTable tableActual, int ej){
        int i, n = tam;
        
        switch(cmboxActual.getSelectedIndex()) {
            case 0: //Dar de alta
                if(aux == 0 && cuenta < tam){
                    arregloS[cuenta] = txtbActual.getText();
                    txtbActual.setText("");

                    switch(ej){
                        case 1:
                            txtActual.setText("Ingrese el n√∫mero de semestres cursados:");
                            break;
                        case 2:
                            txtActual.setText("Ingrese el n√∫mero de tel√©fono:");
                            break;
                        case 3:
                            txtActual.setText("Ingrese el sexo del empleado:");
                            break;
                        case 4:
                            txtActual.setText("Ingrese la direcci√≥n del empleado:");
                            break;
                        case 5:
                            txtActual.setText("Ingrese la extensi√≥n del dpto.:");
                            break;
                        case 6:
                            txtActual.setText("Ingrese el total de ventas:");
                            break;
                    }
                    aux = aux + 1;
                }
                else if(aux == 1 && cuenta < tam){
                    switch(ej){
                        case 1:
                            arregloA[cuenta] = Integer.parseInt(txtbActual.getText());
                            txtbActual.setText("");
                            txtActual.setText("Ingrese el promedio del alumno:");
                            break;
                        case 2:
                            arregloA[cuenta] = Integer.parseInt(txtbActual.getText());
                            txtbActual.setText("");
                            txtActual.setText("Ingrese el saldo del cliente:");
                            break;
                        case 3:
                            arregloE[cuenta] = txtbActual.getText();
                            txtbActual.setText("");
                            txtActual.setText("Ingrese la edad del empleado:");
                            break;
                        case 4:
                            arregloE[cuenta] = txtbActual.getText();
                            txtbActual.setText("");
                            txtActual.setText("Ingrese la edad del empleado:");
                            break;
                        case 5:
                            arregloA[cuenta] = Integer.parseInt(txtbActual.getText());
                            txtbActual.setText("");
                            txtActual.setText("Ingrese el precio del dpto.:");
                            break;
                        case 6:
                            arregloA[cuenta] = Integer.parseInt(txtbActual.getText());
                            txtbActual.setText("");
                            txtActual.setText("Ingrese el nuevo vendedor:");
                            break;
                    }

                    if(ej == 6){
                        btnActual.setEnabled(true);
                        cuenta = cuenta + 1;
                        aux = 0;
                    }
                    else{
                        aux = aux + 1;
                    }
                }
                else if(aux == 2 && cuenta < tam && ej != 6){
                    switch(ej){
                        case 1:
                            arregloB[cuenta] = Integer.parseInt(txtbActual.getText());
                            txtbActual.setText("");
                            txtActual.setText("Ingrese el nuevo alumno:");
                            break;
                        case 2:
                            arregloB[cuenta] = Integer.parseInt(txtbActual.getText());
                            txtbActual.setText("");
                            txtActual.setText("Ingrese el estado moroso:");
                            break;
                        case 3:
                            arregloA[cuenta] = Integer.parseInt(txtbActual.getText());
                            txtbActual.setText("");
                            txtActual.setText("Ingrese el nuevo empleado:");
                            break;
                        case 4:
                            arregloE2[cuenta] = txtbActual.getText();
                            txtbActual.setText("");
                            txtActual.setText("Ingrese el sexo del empleado:");
                            break;
                        case 5:
                            arregloB[cuenta] = Integer.parseInt(txtbActual.getText());
                            txtbActual.setText("");
                            txtActual.setText("Ingrese la ubicaci√≥n del nuevo dpto.:");
                            break;
                    }

                    if(ej == 1 || ej == 3 || ej == 5){
                        btnActual.setEnabled(true);
                        cuenta = cuenta + 1;
                        aux = 0;
                    }
                    else{
                        aux = aux + 1;
                    }
                }
                else if(aux == 3 && cuenta < tam && ej != 1 && ej != 3 && ej != 5 && ej != 6){
                    switch(ej){
                        case 2:
                            arregloE[cuenta] = txtbActual.getText();
                            txtbActual.setText("");
                            txtActual.setText("Ingrese el nuevo cliente:");
                            break;
                        case 4:
                            arregloE2[cuenta] = txtbActual.getText();
                            txtbActual.setText("");
                            txtActual.setText("Ingrese la antig√ºedad del empleado:");
                            break;
                    }
                    
                    if(ej == 2){
                        btnActual.setEnabled(true);
                        cuenta = cuenta + 1;
                        aux = 0;
                    }
                    else{
                        aux = aux + 1;
                    }
                }
                else if(aux == 4 && cuenta < tam && ej != 1 && ej != 2 && ej != 3 && ej != 5 && ej != 6){
                    switch(ej){
                        case 4:
                            arregloB[cuenta] = Integer.parseInt(txtbActual.getText());
                            txtbActual.setText("");
                            txtActual.setText("Ingrese el nuevo empleado:");
                            break;
                    }
                    
                    btnActual.setEnabled(true);
                    cuenta = cuenta + 1;
                    aux = 0;
                }
                else if(cuenta >= tam){
                    txtActual.setText("Tama√±o m√°ximo del arreglo alcanzado.");
                }
                break;
            case 1: //Dar de baja o modificar ventas (en caso del ej. 6)
                if(ej == 6){ //Modificar ventas (ej. 6)
                    if("".equals(arregloC)){
                        arregloC = txtbActual.getText();
                        txtbActual.setText("");

                        for(i = 0; i <= n && !(arregloC.equalsIgnoreCase(arregloS[i])); i++);

                        if(i > n){
                            txtActual.setText("Vendedor no hallado, ingrese de nuevo:");
                            arregloC = "";
                        }
                        else{
                            txtActual.setText("Ingrese el total de ventas:");
                            aux = 1;
                        }
                    }
                    else if(!("".equals(arregloC)) && aux == 1){
                        for(i = 0; i <= n && !(arregloC.equalsIgnoreCase(arregloS[i])); i++);

                        arregloA[i] = Integer.parseInt(txtbActual.getText());
                        txtbActual.setText("");
                        txtActual.setText("Modificaci√≥n realizada con √©xito.");
                        aux = 0;
                        arregloC = "";
                    }
                }
                else{ //Dar de baja
                    arregloC = txtbActual.getText();
                    txtbActual.setText("");

                    for(i = 0; i <= n && !(arregloC.equalsIgnoreCase(arregloS[i])); i++);

                    if(i > n){
                        txtActual.setText("No hallado, intente de nuevo de nuevo:");
                    }
                    else{
                        for(int k = i; k <= n ; k++){
                            arregloS[k] = arregloS[k+1];
                            arregloA[n] = arregloA[k+1];
                            arregloB[n] = arregloB[k+1];
                        }

                        cuenta--; //Baja el n√∫mero de arreglos que existen
                        txtActual.setText("Dado de baja con √©xito.");
                        arregloC = "";
                    }
                }
                break;
            case 2: //Modificar o ver un registro (ej. 6)
                if(ej == 6){ //Ver un registro (ej. 6)
                    arregloC = txtbActual.getText();
                    
                    for(i = 0; i <= n && !(arregloC.equalsIgnoreCase(arregloS[i])); i++);

                    if(i > n){
                        txtActual.setText("Vendedor no hallado, ingrese de nuevo:");
                    }
                    else{
                        //Crea una tabla modificada para agregar en tiempo real el arreglo en funci√≥n del tama√±o de este
                        DefaultTableModel model = (DefaultTableModel) tableActual.getModel();
                        model.setColumnCount(2);
                        model.setRowCount(1);

                        tableActual.setValueAt(arregloS[i], 0, 0);
                        tableActual.setValueAt(arregloA[i], 0, 1);
                    }
                }
                else{ //Modificar un registro
                    if("".equals(arregloC)){
                        arregloC = txtbActual.getText();
                        txtbActual.setText("");

                        for(i = 0; i <= n && !(arregloC.equalsIgnoreCase(arregloS[i])); i++);

                        if(i > n){
                            switch(ej){
                                case 1:
                                    txtActual.setText("Alumno no hallado, ingrese de nuevo:");
                                    break;
                                case 2:
                                    txtActual.setText("Cliente no hallado, ingrese de nuevo:");
                                    break;
                                case 3:
                                    txtActual.setText("Empleado no hallado, ingrese de nuevo:");
                                    break;
                                case 4:
                                    txtActual.setText("Empleado no hallado, ingrese de nuevo:");
                                    break;
                                case 5:
                                    txtActual.setText("Dpto. no hallado, ingrese de nuevo:");
                                    break;
                                case 6:
                                    txtActual.setText("Vendedor no hallado, ingrese de nuevo:");
                                    break;
                            }
                            arregloC = "";
                        }
                        else{
                            switch(ej) {
                                case 1:
                                    txtActual.setText("Ingrese el n√∫mero de semestres cursados:");
                                    break;
                                case 2:
                                    txtActual.setText("Ingrese el estado moroso:");
                                    break;
                                case 3:
                                    txtActual.setText("Ingrese la edad:");
                                    break;
                                case 4:
                                    txtActual.setText("Ingrese la antig√ºedad:");
                                    break;
                                case 5:
                                    txtActual.setText("Ingrese el precio:");
                                    break;
                                case 6:
                                    txtActual.setText("Ingrese la total de ventas:");
                                    break;
                                default:
                                    break;
                            }
                            aux = 0;
                        }
                    }
                    else if(!("".equals(arregloC)) && aux == 0){
                        for(i = 0; i <= n && !(arregloC.equalsIgnoreCase(arregloS[i])); i++);

                        if(ej == 1){
                            arregloA[i] = Integer.parseInt(txtbActual.getText());
                            txtActual.setText("Ingrese el promedio del alumno:");
                            aux = aux + 1;
                        }
                        else{
                            if(ej == 2){
                                arregloE[i] = txtbActual.getText();
                            }
                            else if(ej == 3 || ej == 5 || ej == 6){
                                arregloA[i] = Integer.parseInt(txtbActual.getText());
                            }
                            else if(ej == 4){
                                arregloB[i] = Integer.parseInt(txtbActual.getText());
                            }
                            txtActual.setText("Modificaci√≥n realizada con √©xito.");
                            arregloC = "";
                            aux = 0;
                        }
                        
                        txtbActual.setText("");
                    }
                    else if(!("".equalsIgnoreCase(arregloC)) && aux == 1 && ej == 1){
                        for(i = 0; i <= n && !(arregloC.equalsIgnoreCase(arregloS[i])); i++);

                        arregloB[i] = Integer.parseInt(txtbActual.getText());
                        txtbActual.setText("");
                        txtActual.setText("Modificaci√≥n realizada con √©xito.");
                        arregloC = "";
                        aux = 0;
                    }
                }
                break;
            case 3: //Ver un registro
                arregloC = txtbActual.getText();

                for(i = 0; i <= n && !(arregloC.equalsIgnoreCase(arregloS[i])); i++);

                if(i > n){
                    switch(ej){
                        case 1:
                            txtActual.setText("Alumno no hallado, ingrese de nuevo:");
                            break;
                        case 2:
                            txtActual.setText("Cliente no hallado, ingrese de nuevo:");
                            break;
                        case 3:
                            txtActual.setText("Empleado no hallado, ingrese de nuevo:");
                            break;
                        case 4:
                            txtActual.setText("Empleado no hallado, ingrese de nuevo:");
                            break;
                        case 5:
                            txtActual.setText("Dpto. no hallado, ingrese de nuevo:");
                            break;
                        case 6:
                            txtActual.setText("Vendedor no hallado, ingrese de nuevo:");
                            break;
                    }
                    arregloC = "";
                }
                else{
                    //Crea una tabla modificada para agregar en tiempo real el arreglo en funci√≥n del tama√±o de este
                    DefaultTableModel model = (DefaultTableModel) tableActual.getModel();
                    
                    switch(ej){
                        case 1:
                            //Establece el n√∫mero de columnas y filas y las muestra
                            model.setColumnCount(3);
                            model.setRowCount(1);
                            
                            tableActual.setValueAt(arregloS[i], 0, 0);
                            tableActual.setValueAt(arregloA[i], 0, 1);
                            tableActual.setValueAt(arregloB[i], 0, 2);
                            break;
                        case 2:
                            //Establece el n√∫mero de columnas y filas y las muestra
                            model.setColumnCount(4);
                            model.setRowCount(1);

                            tableActual.setValueAt(arregloS[i], 0, 0);
                            tableActual.setValueAt(arregloA[i], 0, 1);
                            tableActual.setValueAt(arregloB[i], 0, 2);
                            tableActual.setValueAt(arregloE[i], 0, 3);
                            break;
                        case 3:
                            //Establece el n√∫mero de columnas y filas y las muestra
                            model.setColumnCount(3);
                            model.setRowCount(1);

                            tableActual.setValueAt(arregloS[i], 0, 0);
                            tableActual.setValueAt(arregloE[i], 0, 1);
                            tableActual.setValueAt(arregloA[i], 0, 2);
                            break;
                        case 4:
                            //Establece el n√∫mero de columnas y filas y las muestra
                            model.setColumnCount(5);
                            model.setRowCount(1);

                            tableEj4.setValueAt(arregloS[i], 0, 0);
                            tableEj4.setValueAt(arregloE[i], 0, 1);
                            tableEj4.setValueAt(arregloA[i], 0, 2);
                            tableEj4.setValueAt(arregloE2[i], 0, 3);
                            tableEj4.setValueAt(arregloB[i], 0, 4);
                            break;
                        case 5:
                            //Establece el n√∫mero de columnas y filas y las muestra
                            model.setColumnCount(3);
                            model.setRowCount(1);

                            tableEj5.setValueAt(arregloS[i], 0, 0);
                            tableEj5.setValueAt(arregloA[i], 0, 1);
                            tableEj5.setValueAt(arregloB[i], 0, 2);
                            break;
                    }
                }
                break;
            default:
                break;
        }
    }
    //</editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="M√©todo Busca">
    //M√©todo para buscar un sujeto comparando dos arreglos de tipo string
    public static int Busca(String arreglo1[], String arreglo2, int n){
        int i = 0;

        while ((i <= n) && (arreglo1[i].compareTo(arreglo2)< 0)) /*Comprueba que no vaya primero lexicogrÔøΩficamente*/
            i++;

        if ((i > n) || (arreglo1[i].compareTo(arreglo2)> 0)) /*Comprueba que vaya primero lexicogrÔøΩficamente*/
            return (-i);
        else
            return (i);
    }
    //</editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArregloEj1;
    private javax.swing.JButton btnArregloEj2;
    private javax.swing.JButton btnArregloEj3;
    private javax.swing.JButton btnArregloEj4;
    private javax.swing.JButton btnArregloEj5;
    private javax.swing.JButton btnArregloEj6;
    private javax.swing.JButton btnTamEj1;
    private javax.swing.JButton btnTamEj2;
    private javax.swing.JButton btnTamEj3;
    private javax.swing.JButton btnTamEj4;
    private javax.swing.JButton btnTamEj5;
    private javax.swing.JButton btnTamEj6;
    private javax.swing.JButton btnVerEj1;
    private javax.swing.JButton btnVerEj2;
    private javax.swing.JButton btnVerEj3;
    private javax.swing.JButton btnVerEj4;
    private javax.swing.JButton btnVerEj5;
    private javax.swing.JButton btnVerEj6;
    private javax.swing.JComboBox<String> cmboxEj1;
    private javax.swing.JComboBox<String> cmboxEj2;
    private javax.swing.JComboBox<String> cmboxEj3;
    private javax.swing.JComboBox<String> cmboxEj4;
    private javax.swing.JComboBox<String> cmboxEj5;
    private javax.swing.JComboBox<String> cmboxEj6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPanel panelEjercicio1;
    private javax.swing.JPanel panelEjercicio2;
    private javax.swing.JPanel panelEjercicio3;
    private javax.swing.JPanel panelEjercicio4;
    private javax.swing.JPanel panelEjercicio5;
    private javax.swing.JPanel panelEjercicio6;
    private javax.swing.JTable tableEj1;
    private javax.swing.JTable tableEj2;
    private javax.swing.JTable tableEj3;
    private javax.swing.JTable tableEj4;
    private javax.swing.JTable tableEj5;
    private javax.swing.JTable tableEj6;
    private javax.swing.JTabbedPane tpanelLaboratorio1;
    private javax.swing.JLabel txtArregloCeldaEj1;
    private javax.swing.JLabel txtArregloCeldaEj2;
    private javax.swing.JLabel txtArregloCeldaEj3;
    private javax.swing.JLabel txtArregloCeldaEj4;
    private javax.swing.JLabel txtArregloCeldaEj5;
    private javax.swing.JLabel txtArregloCeldaEj6;
    private javax.swing.JLabel txtArregloEj1;
    private javax.swing.JLabel txtArregloEj2;
    private javax.swing.JLabel txtArregloEj3;
    private javax.swing.JLabel txtArregloEj4;
    private javax.swing.JLabel txtArregloEj5;
    private javax.swing.JLabel txtArregloEj6;
    private javax.swing.JLabel txtEjercicio1;
    private javax.swing.JLabel txtEjercicio2;
    private javax.swing.JLabel txtEjercicio3;
    private javax.swing.JLabel txtEjercicio4;
    private javax.swing.JLabel txtEjercicio5;
    private javax.swing.JLabel txtEjercicio6;
    private javax.swing.JLabel txtTamEj1;
    private javax.swing.JLabel txtTamEj2;
    private javax.swing.JLabel txtTamEj3;
    private javax.swing.JLabel txtTamEj4;
    private javax.swing.JLabel txtTamEj5;
    private javax.swing.JLabel txtTamEj6;
    private javax.swing.JTextField txtbArregloEj1;
    private javax.swing.JTextField txtbArregloEj2;
    private javax.swing.JTextField txtbArregloEj3;
    private javax.swing.JTextField txtbArregloEj4;
    private javax.swing.JTextField txtbArregloEj5;
    private javax.swing.JTextField txtbArregloEj6;
    private javax.swing.JTextField txtbTamEj1;
    private javax.swing.JTextField txtbTamEj2;
    private javax.swing.JTextField txtbTamEj3;
    private javax.swing.JTextField txtbTamEj4;
    private javax.swing.JTextField txtbTamEj5;
    private javax.swing.JTextField txtbTamEj6;
    // End of variables declaration//GEN-END:variables
}
